

REACT & REACT RELATED
React Framework: Next.js https://nextjs.org/
React useState: Toggle Favorite Recipes Selected https://www.codecademy.com/courses/react-101/lessons/the-state-hook/exercises/arrays-in-state
React useSWR Fetcher: Client Side Fetching https://swr.vercel.app/
React Reveal: Transitions library https://www.react-reveal.com/examples/common/fade/
Next.js useRouter: Dynamic Routing https://nextjs.org/docs/routing/dynamic-routes
React onHover: Dropdown menu https://upmostly.com/tutorials/react-onhover-event-handling-with-examples
Next.config.js: Rewrite between 2 servers during Development https://nextjs.org/docs/api-reference/next.config.js/rewrites
React lists and keys https://reactjs.org/docs/lists-and-keys.html#keys
React Modal: Venmo PopOut https://github.com/reactjs/react-modal

MAPS API
Google Maps API: https://developers.google.com/codelabs/maps-platform/google-maps-nearby-search-js#0
Inline Frame: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe

SMS API
Send Text Messages: https://www.twilio.com/console

CSS & STYLING
Trader Joe's Font https://www.fontspace.com/trader-joes-font-f34830
Free Icons http://www.fontawesome.com/icons
FontAwesome with Yarn https://fontawesome.com/how-to-use/on-the-web/using-with/react
Free graphics https://www.canva.com
Create Image Transparency  Adobe Photoshop CC
Convert to .ico Image https://www.icoconvererter.com
Position Background image in Position of Div 
  // https://stackoverflow.com/questions/48288176/set-background-image-to-full-screen-in-reactjs/50769188
  // https://www.w3schools.com/cssref/css3_pr_background-size.asp
CSS Buttons https://www.w3schools.com/css/css3_buttons.asp
Centering CSS
  // https://www.freecodecamp.org/news/how-to-center-anything-with-css-align-a-div-text-and-more/
  // https://www.w3.org/Style/Examples/007/center.en.html
CSS Semantics
  // https://css-tricks.com/semantic-class-names/

PYTHON & BACKEND
Render random recipes https://www.w3schools.com/python/ref_random_choices.asp
Werkzeug: Password Hashing in Flask https://www.youtube.com/watch?v=jJ4awOToB6k

JAVASCRIPT & FRONTEND
ARRAY METHODS
 // map https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map
 // includes https://www.w3schools.com/jsref/jsref_includes_array.asp
 // forEach https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach
 // slice https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice


REACT LOCAL STORAGE HANDLE SUBMIT
https://programmingwithmosh.com/react/localstorage-react/


SQLALCHEMY & QUERIES
Checking if data exists https://docs.sqlalchemy.org/en/13/orm/query.html?highlight=exists#sqlalchemy.orm.query.Query.exists

 PRACTICE / TEST CODE
 https://Repl.it


LOOK INTO TESTING
https://jestjs.io/
https://testing-library.com/docs/react-testing-library/intro/



JAVASCRIPT OBJECT destructuring TO USE USER DATA FOR 

if (!user) {

}

if (user) {
  const {fname, phone, user_id} = user;
}


LIFE CYCLE METHODS
CLASS COMPONENT > COMPONENTDIDUPDATE()
LIKELY NOT NEED TO USE THEM IN project
THEY COME UP A loT 
life cycle of react app different things trigger different METHODS

useEffect = easy to do simple things, can do a lot of things, can get really complicated

if you say you're a react developer, you really need to know useEffect

might use useEffect for a hoverstate or a watcher,
e.g. like a variable when it changes it's value and do something based on it
e.g. like adding to a counter and using that value to change something on the page
